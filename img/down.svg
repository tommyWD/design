<?xml version="1.0"?>
<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:svgjs="http://svgjs.com/svgjs" version="1.1" width="512" height="512" x="0" y="0" viewBox="0 0 451.847 451.847" style="enable-background:new 0 0 512 512" xml:space="preserve"><g><script class="__REQUESTLY__SCRIPT">(function(namespace) {
  window[namespace] = window[namespace] || {};
  window[namespace].responseRules = {};

  let open = XMLHttpRequest.prototype.open;
  XMLHttpRequest.prototype.open = function(method) {
    this.addEventListener('readystatechange', function() {
      if (this.readyState === 4 &amp;&amp; window[namespace].responseRules.hasOwnProperty(this.responseURL)) {
        const responseRule = window[namespace].responseRules[this.responseURL];
        const {response, id} = responseRule;
        const responseType = this.responseType;
        let customResponse;

        customResponse = response.type === 'code' ? responseRule.evaluator({
            method,
            url: this.responseURL,
            requestHeaders: this.requestHeaders,
            requestData: this.requestData,
            responseType: this.responseType,
            response: this.response
          }) : response.value;

        Object.defineProperty(this, 'response', {
          get: function () {
            if (response.type === 'static' &amp;&amp; responseType === 'json') {
              return JSON.parse(customResponse);
            }
            return customResponse;
          }
        });

        if (responseType === '' || responseType === 'text') {
          Object.defineProperty(this, 'responseText', {
            get: function () {
              return customResponse;
            }
          });
        }

        window.postMessage({
          from: 'requestly',
          type: 'response_rule_applied',
          id
        }, window.location.href);
      }
    }, false);
    open.apply(this, arguments);
  };

  let send = XMLHttpRequest.prototype.send;
  XMLHttpRequest.prototype.send = function(data) {
    this.requestData = data;
    send.apply(this, arguments);
  };

  let setRequestHeader = XMLHttpRequest.prototype.setRequestHeader;
  XMLHttpRequest.prototype.setRequestHeader = function(header, value) {
    this.requestHeaders = this.requestHeaders || {};
    this.requestHeaders[header] = value;
    setRequestHeader.apply(this, arguments);
  }
})('__REQUESTLY__')</script>
<g xmlns="http://www.w3.org/2000/svg">
	<path d="M225.923,354.706c-8.098,0-16.195-3.092-22.369-9.263L9.27,151.157c-12.359-12.359-12.359-32.397,0-44.751   c12.354-12.354,32.388-12.354,44.748,0l171.905,171.915l171.906-171.909c12.359-12.354,32.391-12.354,44.744,0   c12.365,12.354,12.365,32.392,0,44.751L248.292,345.449C242.115,351.621,234.018,354.706,225.923,354.706z" fill="#ffffff" data-original="#000000" style=""/>
</g>
<g xmlns="http://www.w3.org/2000/svg">
</g>
<g xmlns="http://www.w3.org/2000/svg">
</g>
<g xmlns="http://www.w3.org/2000/svg">
</g>
<g xmlns="http://www.w3.org/2000/svg">
</g>
<g xmlns="http://www.w3.org/2000/svg">
</g>
<g xmlns="http://www.w3.org/2000/svg">
</g>
<g xmlns="http://www.w3.org/2000/svg">
</g>
<g xmlns="http://www.w3.org/2000/svg">
</g>
<g xmlns="http://www.w3.org/2000/svg">
</g>
<g xmlns="http://www.w3.org/2000/svg">
</g>
<g xmlns="http://www.w3.org/2000/svg">
</g>
<g xmlns="http://www.w3.org/2000/svg">
</g>
<g xmlns="http://www.w3.org/2000/svg">
</g>
<g xmlns="http://www.w3.org/2000/svg">
</g>
<g xmlns="http://www.w3.org/2000/svg">
</g>
</g></svg>
